{"version":3,"sources":["components/switch/switch.ts"],"names":[],"mappings":"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","file":"components/switch/switch.js","sourcesContent":["import {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  Output,\r\n  Provider,\r\n  ViewEncapsulation } from '@angular/core';\r\nimport {\r\n  NG_VALUE_ACCESSOR,\r\n  ControlValueAccessor } from '@angular/forms';\r\n\r\nlet nextId = 0;\r\n\r\nconst MD2_SWITCH_CONTROL_VALUE_ACCESSOR = new Provider(NG_VALUE_ACCESSOR, {\r\n  useExisting: forwardRef(() => Md2Switch),\r\n  multi: true\r\n});\r\n\r\n@Component({\r\n  selector: 'md2-switch',\r\n  template: `\r\n    <div class=\"md2-switch-layout\">\r\n      <div class=\"md2-switch-container\">\r\n        <div class=\"md2-switch-bar\"></div>\r\n        <div class=\"md2-switch-thumb-container\">\r\n          <div class=\"md2-switch-thumb\"></div>\r\n        </div>\r\n      </div>\r\n      <label [id]=\"labelId\">\r\n        <ng-content></ng-content>\r\n      </label>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .md2-switch-layout { margin: 16px; margin-left: inherit; white-space: nowrap; cursor: pointer; outline: 0; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; min-height: 30px; line-height: 28px; -webkit-align-items: center; -ms-flex-align: center; align-items: center; display: -webkit-flex; display: -ms-flexbox; display: flex; }\r\n    .md2-switch-layout label { border-color: transparent; border-width: 0; cursor: pointer; float: left; -ms-word-wrap: break-word; word-wrap: break-word; max-width: 100%; white-space: normal; line-height: normal; }\r\n    .md2-switch:focus { outline: none; }\r\n    .md2-switch .md2-switch-container { display: inline-block; cursor: pointer; width: 36px; min-width: 36px; height: 24px; position: relative; -moz-user-select: none; -ms-user-select: none; -webkit-user-select: none; user-select: none; margin-right: 8px; }\r\n    .md2-switch .md2-switch-bar { left: 1px; width: 34px; top: 5px; height: 14px; border-radius: 8px; position: absolute; background-color: #9e9e9e; }\r\n    .md2-switch .md2-switch-thumb-container { top: 2px; left: 0; width: 16px; position: absolute; -moz-transform: translate3d(0, 0, 0); -ms-transform: translate3d(0, 0, 0); -o-transform: translate3d(0, 0, 0); -webkit-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); z-index: 1; }\r\n    .md2-switch .md2-switch-thumb { position: absolute; margin: 0; left: 0; top: 0; outline: none; height: 20px; width: 20px; border-radius: 50%; box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26); background-color: #fafafa; }\r\n    .md2-switch.md2-switch-checked .md2-switch-bar { background-color: rgba(33, 150, 243, 0.5); }\r\n    .md2-switch.md2-switch-checked .md2-switch-thumb-container { -moz-transform: translate3d(100%, 0, 0); -ms-transform: translate3d(100%, 0, 0); -o-transform: translate3d(100%, 0, 0); -webkit-transform: translate3d(100%, 0, 0); transform: translate3d(100%, 0, 0); }\r\n    .md2-switch.md2-switch-checked .md2-switch-thumb { background-color: #2196f3; }\r\n    .md2-switch.md2-switch-disabled .md2-switch-layout, .md2-switch.md2-switch-disabled label, .md2-switch.md2-switch-disabled .md2-switch-container { cursor: not-allowed; }\r\n    .md2-switch.md2-switch-disabled .md2-switch-bar { background-color: rgba(0, 0, 0, 0.12); }\r\n    .md2-switch.md2-switch-disabled .md2-switch-thumb { background-color: #bdbdbd; }\r\n    .md2-switch:not(.md2-switch-dragging) .md2-switch-bar { -moz-transition-delay: 0.05s; -o-transition-delay: 0.05s; -webkit-transition-delay: 0.05s; transition-delay: 0.05s; -moz-transition: all 0.08s linear; -o-transition: all 0.08s linear; -webkit-transition: all 0.08s linear; transition: all 0.08s linear; -moz-transition-property: transform, background-color; -o-transition-property: transform, background-color; -webkit-transition-property: transform, background-color; transition-property: transform, background-color; }\r\n    .md2-switch:not(.md2-switch-dragging) .md2-switch-thumb { -moz-transition-delay: 0.05s; -o-transition-delay: 0.05s; -webkit-transition-delay: 0.05s; transition-delay: 0.05s; -moz-transition: all 0.08s linear; -o-transition: all 0.08s linear; -webkit-transition: all 0.08s linear; transition: all 0.08s linear; -moz-transition-property: transform, background-color; -o-transition-property: transform, background-color; -webkit-transition-property: transform, background-color; transition-property: transform, background-color; }\r\n    .md2-switch:not(.md2-switch-dragging) .md2-switch-thumb-container { -moz-transition: all 0.08s linear; -o-transition: all 0.08s linear; -webkit-transition: all 0.08s linear; transition: all 0.08s linear; -moz-transition-property: transform, background-color; -o-transition-property: transform, background-color; -webkit-transition-property: transform, background-color; transition-property: transform, background-color; }\r\n  `],\r\n  host: {\r\n    'role': 'checkbox',\r\n    '[id]': 'id',\r\n    '[class.md2-switch]': 'true',\r\n    '[class.md2-switch-checked]': 'checked',\r\n    '[class.md2-switch-disabled]': 'disabled',\r\n    '[tabindex]': 'disabled ? -1 : tabindex',\r\n    '[attr.aria-label]': 'ariaLabel',\r\n    '[attr.aria-labelledby]': 'labelId',\r\n    '[attr.aria-checked]': 'getAriaChecked()',\r\n    '[attr.aria-disabled]': 'disabled',\r\n    '(click)': 'onInteractionEvent($event)',\r\n    '(keyup.space)': 'onInteractionEvent($event)',\r\n    '(blur)': 'onTouched()'\r\n  },\r\n  providers: [MD2_SWITCH_CONTROL_VALUE_ACCESSOR],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class Md2Switch implements AfterContentInit, ControlValueAccessor {\r\n\r\n  @Input('aria-label') ariaLabel: string = '';\r\n\r\n  @Input() id: string = 'md2-switch-' + (++nextId);\r\n\r\n  @Input() disabled: boolean = false;\r\n\r\n  @Input() tabindex: number = 0;\r\n\r\n  @Output() change: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  onTouched: () => any = () => { };\r\n\r\n  private _checked: boolean = false;\r\n  private _isInitialized: boolean = false;\r\n  private _changeSubscription: { unsubscribe: () => any } = null;\r\n\r\n  @Input() get checked() { return this._checked; }\r\n  set checked(checked: boolean) {\r\n    if (checked !== this._checked) {\r\n      this._checked = checked;\r\n      if (this._isInitialized) {\r\n        this.change.emit(this._checked);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._isInitialized = true;\r\n  }\r\n\r\n  get labelId() { return this.id + '-label'; }\r\n\r\n  /**\r\n   * get checked status\r\n   * @return boolean value if swith is active or not\r\n   */\r\n  getAriaChecked() { return this.checked ? 'true' : 'false'; }\r\n\r\n  /**\r\n   * toggle switch\r\n   */\r\n  toggle() { this.checked = !this.checked; }\r\n\r\n  onInteractionEvent(event: Event) {\r\n    if (this.disabled) {\r\n      event.stopPropagation();\r\n      return;\r\n    }\r\n    this.toggle();\r\n  }\r\n\r\n  writeValue(value: any) { this.checked = !!value; }\r\n\r\n  registerOnChange(fn: any) {\r\n    if (this._changeSubscription) {\r\n      this._changeSubscription.unsubscribe();\r\n    }\r\n    this._changeSubscription = <{ unsubscribe: () => any }>this.change.subscribe(fn);\r\n  }\r\n\r\n  registerOnTouched(fn: any) { this.onTouched = fn; }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}