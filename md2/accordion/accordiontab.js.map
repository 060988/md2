{"version":3,"sources":["accordion/accordiontab.ts"],"names":[],"mappings":"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","file":"accordion/accordiontab.js","sourcesContent":["import {\r\n  Component,\r\n  Directive,\r\n  Input,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Md2Accordion } from './accordionpanel';\r\n\r\n@Directive({ selector: 'md2-accordion-header' })\r\nexport class Md2AccordionHeader { }\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'md2-accordion-tab',\r\n  template: `\r\n    <div class=\"md2-accordion-header\" (click)=\"_handleClick($event)\">\r\n      <span>{{header}}</span>\r\n      <ng-content select=\"md2-accordion-header\"></ng-content>\r\n      <span class=\"md2-accordion-header-icon\"></span>\r\n    </div>\r\n    <div class=\"md2-accordion-tab-content\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n  styleUrls: ['accordion.css'],\r\n  host: {\r\n    'role': 'accordion-tab',\r\n    '[class.md2-accordion-tab-active]': 'active',\r\n    '[class.md2-accordion-tab-disabled]': 'disabled'\r\n  },\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class Md2AccordionTab {\r\n\r\n  @Input() header: string;\r\n\r\n  @Input() active: boolean;\r\n\r\n  @Input() disabled: boolean;\r\n\r\n  constructor(private _accordion: Md2Accordion) {\r\n    this._accordion.addTab(this);\r\n  }\r\n\r\n  /**\r\n   * Toggle the accordion\r\n   * @param event\r\n   * @return if it is disabled\r\n   */\r\n  _handleClick(event: Event) {\r\n    if (this.disabled) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n\r\n    let index = this.findTabIndex();\r\n\r\n    if (this.active) {\r\n      this.active = !this.active;\r\n      this._accordion.close.emit({ originalEvent: event, index: index });\r\n    } else if (!this._accordion.multiple) {\r\n      for (let i = 0; i < this._accordion.tabs.length; i++) {\r\n        this._accordion.tabs[i].active = false;\r\n      }\r\n      this.active = true;\r\n      this._accordion.open.emit({ originalEvent: event, index: index });\r\n    } else {\r\n      this.active = true;\r\n      this._accordion.open.emit({ originalEvent: event, index: index });\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * Find index of specific tab of accordion\r\n   * @return index number of this tab\r\n   */\r\n  findTabIndex() {\r\n    let index = -1;\r\n    for (let i = 0; i < this._accordion.tabs.length; i++) {\r\n      if (this._accordion.tabs[i] === this) {\r\n        index = i;\r\n        break;\r\n      }\r\n    }\r\n    return index;\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}