{"version":3,"sources":["menu/menu1.ts"],"names":[],"mappings":"AAAA,UAAU;AACV,iBAAiB;AACjB,cAAc;AACd,eAAe;AACf,SAAS;AACT,iBAAiB;AACjB,cAAc;AACd,aAAa;AACb,uBAAuB;AACvB,yBAAyB;AACzB,iDAAiD;AAEjD,qDAAqD;AACrD,mCAAmC;AAEnC,mDAAmD;AAEnD,OAAO;AACP,eAAe;AACf,qBAAqB;AACrB,OAAO;AACP,2CAA2C;AAC3C,mEAAmE;AACnE,2CAA2C;AAC3C,KAAK;AACL,GAAG;AAEH,cAAc;AACd,2BAA2B;AAC3B,WAAW;AACX,qBAAqB;AACrB,iCAAiC;AACjC,iCAAiC;AACjC,KAAK;AACL,IAAI;AACJ,wBAAwB;AAExB,uCAAuC;AAEvC,sEAAsE;AAEtE,mDAAmD;AAEnD,OAAO;AACP,gBAAgB;AAChB,OAAO;AACP,4CAA4C;AAE5C,OAAO;AACP,iBAAiB;AACjB,OAAO;AACP,8CAA8C;AAE9C,OAAO;AACP,qBAAqB;AACrB,qBAAqB;AACrB,OAAO;AACP,4CAA4C;AAC5C,8CAA8C;AAC9C,gDAAgD;AAChD,KAAK;AAEL,GAAG;AAEH,6CAA6C;AAC7C,iDAAiD;AAEjD,4CAA4C;AAC5C,mEAAmE;AACnE,yDAAyD;AACzD,0BAA0B;AAC1B,0DAA0D;AAC1D,OAAO;AACP,MAAM;AAEN,mFAAmF;AAEnF,0BAA0B;AAC1B,oBAAoB;AACpB,uBAAuB;AACvB,2DAA2D;AAC3D,KAAK;AAEL,mBAAmB;AACnB,wDAAwD;AACxD,KAAK;AAEL,GAAG;AAEH,uFAAuF;AAEvF,aAAa;AACb,4BAA4B;AAC5B,iCAAiC;AACjC,sCAAsC;AACtC,IAAI;AACJ,8BAA8B;AAC9B,2CAA2C;AAC3C,cAAc;AACd,gCAAgC;AAChC,qBAAqB;AACrB,QAAQ;AACR,KAAK;AACL,GAAG","file":"menu1.js","sourcesContent":["//import {\n//  ContentChild,\n//  Directive,\n//  ElementRef,\n//  Host,\n//  HostListener,\n//  OnDestroy,\n//  NgModule,\n//  ModuleWithProviders\n//} from '@angular/core';\n//import { CommonModule } from '@angular/common';\n\n//@Directive({ selector: '[md2-menu-not-closable]' })\n//export class Md2MenuNotClosable {\n\n//  constructor(private elementRef: ElementRef) { }\n\n//  /**\n//   * contains\n//   * @param element\n//   */\n//  public contains(element: HTMLElement) {\n//    let thisElement: HTMLElement = this.elementRef.nativeElement;\n//    return thisElement.contains(element);\n//  }\n//}\n\n//@Directive({\n//  selector: '[md2-menu]',\n//  host: {\n//    'role': 'menu',\n//    '[class.md2-menu]': 'true',\n//    '[class.open]': 'isVisible'\n//  }\n//})\n//export class Md2Menu {\n\n//  private isVisible: boolean = false;\n\n//  @ContentChild(Md2MenuNotClosable) notClosable: Md2MenuNotClosable;\n\n//  constructor(private elementRef: ElementRef) { }\n\n//  /**\n//   * open menu\n//   */\n//  public open() { this.isVisible = true; }\n\n//  /**\n//   * close menu\n//   */\n//  public close() { this.isVisible = false; }\n\n//  /**\n//   * check closeble\n//   * @param element\n//   */\n//  isInClosableZone(element: HTMLElement) {\n//    if (!this.notClosable) { return false; }\n//    return this.notClosable.contains(element);\n//  }\n\n//}\n\n//@Directive({ selector: '[md2-menu-open]' })\n//export class Md2MenuOpen implements OnDestroy {\n\n//  private close = (event: MouseEvent) => {\n//    if (!this.menu.isInClosableZone(<HTMLElement>event.target) &&\n//      event.target !== this.elementRef.nativeElement) {\n//      this.menu.close();\n//      document.removeEventListener('click', this.close);\n//    }\n//  };\n\n//  constructor( @Host() private menu: Md2Menu, private elementRef: ElementRef) { }\n\n//  @HostListener('click')\n//  private open() {\n//    this.menu.open();\n//    document.addEventListener('click', this.close, true);\n//  }\n\n//  ngOnDestroy() {\n//    document.removeEventListener('click', this.close);\n//  }\n\n//}\n\n//export const MD2_MENU_DIRECTIVES: any[] = [Md2MenuNotClosable, Md2Menu, Md2MenuOpen];\n\n//@NgModule({\n//  imports: [CommonModule],\n//  exports: MD2_MENU_DIRECTIVES,\n//  declarations: MD2_MENU_DIRECTIVES,\n//})\n//export class Md2MenuModule {\n//  static forRoot(): ModuleWithProviders {\n//    return {\n//      ngModule: Md2MenuModule,\n//      providers: []\n//    };\n//  }\n//}\n"]}