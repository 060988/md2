{"version":3,"sources":["data-table/data-table.ts"],"names":[],"mappings":"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","file":"data-table.js","sourcesContent":["import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  SimpleChange,\n  OnChanges,\n  Optional,\n  DoCheck,\n  NgModule,\n  ModuleWithProviders,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport interface SortEvent {\n  sortField: string | string[];\n  sortOrder: string;\n}\n\nexport interface PageEvent {\n  activePage: number;\n  pageLength: number;\n  dataLength: number;\n}\n\nexport interface DataEvent {\n  length: number;\n}\n\n@Directive({\n  selector: 'table[md2-data]',\n  exportAs: 'Md2DataTable'\n})\nexport class Md2DataTable implements OnChanges, DoCheck {\n\n  private _dataLength = 0;\n  private _activePage: number = 1;\n\n  data: any[];\n  onDataChange = new EventEmitter<DataEvent>();\n  onSortChange = new EventEmitter<SortEvent>();\n  onPageChange = new EventEmitter<PageEvent>();\n\n  private sortField: string | string[] = '';\n  private sortOrder = 'asc';\n  private isDataChanged = false;\n\n  @Input('md2-data') inputData: any[] = [];\n  @Input('md2-page-length') pageLength = 1000;\n  @Input()\n  get activePage(): number { return this._activePage; }\n  set activePage(value: number) {\n    this._activePage = value;\n    this.activePageChange.emit(value);\n  }\n\n  @Output() activePageChange = new EventEmitter();\n\n  getSort(): SortEvent {\n    return { sortField: this.sortField, sortOrder: this.sortOrder };\n  }\n\n  setSort(sortField: string | string[], sortOrder: string): void {\n    if (this.sortField !== sortField || this.sortOrder !== sortOrder) {\n      this.sortField = sortField;\n      this.sortOrder = sortOrder;\n      this.isDataChanged = true;\n      this.onSortChange.emit({ sortField: sortField, sortOrder: sortOrder });\n    }\n  }\n\n  getPage(): PageEvent {\n    return {\n      activePage: this.activePage,\n      pageLength: this.pageLength,\n      dataLength: this.inputData.length\n    };\n  }\n\n  setPage(activePage: number, pageLength: number): void {\n    if (this.pageLength !== pageLength || this.activePage !== activePage) {\n      this.activePage = this.activePage !== activePage ?\n        activePage : this.calculateNewActivePage(this.pageLength, pageLength);\n      this.pageLength = pageLength;\n      this.isDataChanged = true;\n      this.onPageChange.emit({\n        activePage: this.activePage,\n        pageLength: this.pageLength,\n        dataLength: this.inputData.length\n      });\n    }\n  }\n\n  private calculateNewActivePage(previousPageLength: number,\n    currentPageLength: number): number {\n    let firstRowOnPage = (this.activePage - 1) * previousPageLength + 1;\n    let newActivePage = Math.ceil(firstRowOnPage / currentPageLength);\n    return newActivePage;\n  }\n\n  private recalculatePage() {\n    let _lastPage = Math.ceil(this.inputData.length / this.pageLength);\n    this.activePage = _lastPage < this.activePage ? _lastPage : this.activePage;\n    this.activePage = this.activePage || 1;\n  }\n\n  ngOnChanges(changes: { [key: string]: SimpleChange }): any {\n    if (changes['inputData']) {\n      this.inputData = changes['inputData'].currentValue || [];\n      if (this.inputData.length > 0) {\n        this.recalculatePage();\n        this.onPageChange.emit({\n          activePage: this.activePage,\n          pageLength: this.pageLength,\n          dataLength: this.inputData.length\n        });\n        this.isDataChanged = true;\n      }\n    }\n  }\n\n  ngDoCheck(): any {\n    if (this._dataLength !== this.inputData.length) {\n      this._dataLength = this.inputData.length;\n      this.fillData();\n      this.recalculatePage();\n      this.onPageChange.emit({\n        activePage: this.activePage,\n        pageLength: this.pageLength,\n        dataLength: this.inputData.length\n      });\n      this.isDataChanged = true;\n    }\n    if (this.isDataChanged) {\n      this.fillData();\n      this.isDataChanged = false;\n    }\n  }\n\n  private fillData(): void {\n    this.activePage = this.activePage;\n    this.pageLength = this.pageLength;\n\n    let offset = (this.activePage - 1) * this.pageLength;\n    let data = this.inputData;\n    let sortField = this.sortField;\n    if (sortField) {\n      data = data.sort((a: any, b: any) => {\n        let x = isNaN(a[sortField + '']) ? a[sortField + ''].toLowerCase() : a[sortField + ''];\n        let y = isNaN(b[sortField + '']) ? b[sortField + ''].toLowerCase() : b[sortField + ''];\n        return (x > y) ? 1 : (y > x) ? -1 : 0;\n      });\n    }\n    if (this.sortOrder === 'desc') { data.reverse(); }\n    this.data = data.slice(offset, offset + this.pageLength);\n  }\n\n}\n\n@Component({\n  selector: '[md2-sort-field]',\n  template: `\n    <span (click)=\"_sort()\">\n      <ng-content></ng-content>\n      <svg *ngIf=\"_isAsc\" width=\"24\"height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M7 14l5-5 5 5z\"/>\n      </svg>\n      <svg *ngIf=\"_isDesc\" width=\"24\"height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M7 10l5 5 5-5z\"/>\n      </svg>\n      <svg *ngIf=\"!_isAsc && !_isDesc\" width=\"24\"height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M7,10.5l5-5l5,5H7z\"/>\n        <path d=\"M7,12.5l5,5l5-5H7z\"/>\n      </svg>\n    </span>\n  `,\n  styles: [`\n    [md2-sort-field] span {\n      position: relative;\n      display: block;\n      line-height: 24px;\n      white-space: nowrap;\n      cursor: pointer;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      -ms-user-select: none;\n      user-select: none;\n    }\n    [md2-sort-field] span svg {\n      display: inline-block;\n      vertical-align: middle;\n      fill: currentColor;\n    }\n  `],\n  encapsulation: ViewEncapsulation.None\n})\nexport class Md2DataTableSortField {\n  _isAsc: boolean = false;\n  _isDesc: boolean = false;\n\n  @Input('md2-sort-field') sortField: string;\n\n  constructor(private _md2Table: Md2DataTable) {\n    _md2Table.onSortChange.subscribe((event: SortEvent) => {\n      this._isAsc = (event.sortField === this.sortField && event.sortOrder === 'asc');\n      this._isDesc = (event.sortField === this.sortField && event.sortOrder === 'desc');\n    });\n  }\n\n  _sort() {\n    if (this._isAsc) {\n      this._md2Table.setSort(this.sortField, 'desc');\n    } else {\n      this._md2Table.setSort(this.sortField, 'asc');\n    }\n  }\n}\n\n@Component({\n  selector: 'md2-pagination',\n  templateUrl: 'pagination.html',\n  styleUrls: ['pagination.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class Md2Pagination implements OnChanges {\n\n  private _md2Table: Md2DataTable;\n  _activePage: number;\n  _rows: number;\n  _lastPage: number;\n  _dataLength: number = 0;\n\n  @Output() change: EventEmitter<any> = new EventEmitter<any>();\n\n  @Input('md2-rows') rows: any = [];\n  @Input('md2-table') md2InputTable: Md2DataTable;\n\n  constructor( @Optional() private _injectMd2Table: Md2DataTable) { }\n\n  ngAfterViewInit() {\n    this._md2Table = this.md2InputTable || this._injectMd2Table;\n    this._onPageChange(this._md2Table.getPage());\n    this._md2Table.onPageChange.subscribe(this._onPageChange);\n  }\n\n  ngOnChanges(changes: any): any {\n    this._md2Table = this.md2InputTable || this._injectMd2Table;\n    this._onPageChange(this._md2Table.getPage());\n    this._md2Table.onPageChange.subscribe(this._onPageChange);\n  }\n\n  _setPage(page: number): void {\n    this._md2Table.setPage(page, this._rows);\n    this.change.emit(page);\n  }\n\n  _setRows(event: any): void {\n    event.stopPropagation();\n    this._md2Table.setPage(this._activePage, event.target.value);\n    this.change.emit(this._activePage);\n  }\n\n  private _onPageChange = (event: PageEvent) => {\n    this._activePage = event.activePage;\n    this._rows = event.pageLength;\n    this._dataLength = event.dataLength;\n    this._lastPage = Math.ceil(this._dataLength / this._rows);\n  }\n}\n\nexport const MD2_DATA_TABLE_DIRECTIVES: any[] = [\n  Md2DataTable,\n  Md2DataTableSortField,\n  Md2Pagination\n];\n\n@NgModule({\n  imports: [CommonModule],\n  exports: MD2_DATA_TABLE_DIRECTIVES,\n  declarations: MD2_DATA_TABLE_DIRECTIVES,\n})\nexport class Md2DataTableModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: Md2DataTableModule,\n      providers: []\n    };\n  }\n}\n"]}