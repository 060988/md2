{"version":3,"sources":["components/tooltip/tooltip.ts"],"names":[],"mappings":"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","file":"components/tooltip/tooltip.js","sourcesContent":["import { ApplicationRef, ComponentRef, Directive, DynamicComponentLoader, HostListener, Input, Provider, ReflectiveInjector, ViewContainerRef } from '@angular/core';\r\nimport { ViewContainerRef_ } from '@angular/core/src/linker/view_container_ref';\r\nimport { Md2TooltipComponent } from './tooltip.component';\r\nimport { Md2TooltipOptions } from './tooltip.options';\r\n\r\n@Directive({\r\n  selector: '[tooltip]'\r\n})\r\n\r\nexport class Md2Tooltip {\r\n  private visible: boolean = false;\r\n  private timer: any;\r\n\r\n  @Input('tooltip') content: string;\r\n  @Input('tooltip-direction') direction: string = 'bottom';\r\n  @Input('tooltip-delay') delay: number = 0;\r\n\r\n  private viewContainerRef: ViewContainerRef;\r\n  private loader: DynamicComponentLoader;\r\n\r\n  private tooltip: Promise<ComponentRef<any>>;\r\n\r\n  constructor(viewContainerRef: ViewContainerRef, loader: DynamicComponentLoader, private appRef: ApplicationRef) {\r\n    this.viewContainerRef = viewContainerRef;\r\n    this.loader = loader;\r\n  }\r\n\r\n  /**\r\n   * show tooltip while mouse enter or focus of element\r\n   * @param event\r\n   */\r\n  @HostListener('focusin', ['$event'])\r\n  @HostListener('mouseenter', ['$event'])\r\n  public show(event: Event): void {\r\n    if (this.visible) {\r\n      return;\r\n    }\r\n    this.visible = true;\r\n    let options = new Md2TooltipOptions({\r\n      content: this.content,\r\n      direction: this.direction,\r\n      hostEl: this.viewContainerRef.element\r\n    });\r\n\r\n    let binding = ReflectiveInjector.resolve([\r\n      new Provider(Md2TooltipOptions, { useValue: options })\r\n    ]);\r\n    clearTimeout(this.timer);\r\n    this.timer = setTimeout(() => {\r\n      this.timer = 0;\r\n      let appElement: ViewContainerRef = new ViewContainerRef_(this.appRef['_rootComponents'][0]._hostElement);\r\n      this.tooltip = this.loader\r\n        .loadNextToLocation(Md2TooltipComponent, appElement, binding)\r\n        .then((componentRef: ComponentRef<any>) => {\r\n          return componentRef;\r\n        });\r\n    }, this.delay);\r\n  }\r\n\r\n  /**\r\n   * hide tooltip while mouse our/leave or blur of element\r\n   * @param event\r\n   */\r\n  @HostListener('focusout', ['$event'])\r\n  @HostListener('mouseleave', ['$event'])\r\n  public hide(event: Event): void {\r\n    clearTimeout(this.timer);\r\n    if (!this.visible) {\r\n      return;\r\n    }\r\n    this.visible = false;\r\n    if (this.tooltip) {\r\n      this.tooltip.then((componentRef: ComponentRef<any>) => {\r\n        componentRef.destroy();\r\n        return componentRef;\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport const TOOLTIP_DIRECTIVES: Array<any> = [Md2Tooltip, Md2TooltipComponent];\r\n"],"sourceRoot":"/source/"}