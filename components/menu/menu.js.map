{"version":3,"sources":["components/menu/menu.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,uBAAmF,eAAe,CAAC,CAAA;AAGnG;IAEE,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAE/C,QAAQ,CAAC,OAAoB;QAC3B,IAAI,WAAW,GAAgB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QAC7D,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC;AACH,CAAC;AATD;IAAC,gBAAS,CAAC,EAAE,QAAQ,EAAE,yBAAyB,EAAE,CAAC;;sBAAA;AACtC,0BAAkB,qBAQ9B,CAAA;AAUD;IAME,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAJlC,cAAS,GAAY,KAAK,CAAC;IAIW,CAAC;IAE/C,IAAI,KAAK,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;IAEjC,KAAK,KAAK,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC;IAEnC,gBAAgB,CAAC,OAAoB;QACnC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;YACpB,MAAM,CAAC,KAAK,CAAC;QAEf,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAC5C,CAAC;AAEH,CAAC;AAfC;IAAC,mBAAY,CAAC,kBAAkB,CAAC;;4CAAA;AAZnC;IAAC,gBAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,IAAI,EAAE;YACJ,MAAM,EAAE,MAAM;YACd,kBAAkB,EAAE,MAAM;YAC1B,cAAc,EAAE,WAAW;SAC5B;KACF,CAAC;;WAAA;AACW,eAAO,UAmBnB,CAAA;AAGD;IASE,YAA4B,IAAa,EAAU,UAAsB;QAA7C,SAAI,GAAJ,IAAI,CAAS;QAAU,eAAU,GAAV,UAAU,CAAY;QAPjE,UAAK,GAAG,CAAC,KAAiB;YAChC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAc,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC;gBAC7G,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;gBAClB,QAAQ,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YACpD,CAAC;QACH,CAAC,CAAC;IAE2E,CAAC;IAEvD,IAAI;QACzB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QACjB,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC;IAED,WAAW;QACT,QAAQ,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;AAEH,CAAC;AATC;IAAC,mBAAY,CAAC,OAAO,CAAC;;;;uCAAA;AAZxB;IAAC,gBAAS,CAAC,EAAE,QAAQ,EAAE,iBAAiB,EAAE,CAAC;eAU3B,WAAI,EAAE;;eAVqB;AAC9B,mBAAW,cAoBvB,CAAA;AAEY,uBAAe,GAAG,CAAC,kBAAkB,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC","file":"components/menu/menu.js","sourcesContent":["import { ContentChild, Directive, ElementRef, Host, HostListener, OnDestroy } from \"@angular/core\";\r\n\r\n@Directive({ selector: \"[md2-menu-not-closable]\" })\r\nexport class Md2MenuNotClosable {\r\n\r\n  constructor(private elementRef: ElementRef) { }\r\n\r\n  contains(element: HTMLElement) {\r\n    let thisElement: HTMLElement = this.elementRef.nativeElement;\r\n    return thisElement.contains(element);\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: \"[md2-menu]\",\r\n  host: {\r\n    'role': 'menu',\r\n    '[class.md2-menu]': 'true',\r\n    '[class.open]': 'isVisible'\r\n  }\r\n})\r\nexport class Md2Menu {\r\n\r\n  private isVisible: boolean = false;\r\n\r\n  @ContentChild(Md2MenuNotClosable) notClosable: Md2MenuNotClosable;\r\n\r\n  constructor(private elementRef: ElementRef) { }\r\n\r\n  open() { this.isVisible = true; }\r\n\r\n  close() { this.isVisible = false; }\r\n\r\n  isInClosableZone(element: HTMLElement) {\r\n    if (!this.notClosable)\r\n      return false;\r\n\r\n    return this.notClosable.contains(element);\r\n  }\r\n\r\n}\r\n\r\n@Directive({ selector: \"[md2-menu-open]\" })\r\nexport class Md2MenuOpen implements OnDestroy {\r\n\r\n  private close = (event: MouseEvent) => {\r\n    if (!this.menu.isInClosableZone(<HTMLElement>event.target) && event.target !== this.elementRef.nativeElement) {\r\n      this.menu.close();\r\n      document.removeEventListener(\"click\", this.close);\r\n    }\r\n  };\r\n\r\n  constructor( @Host() public menu: Md2Menu, private elementRef: ElementRef) { }\r\n\r\n  @HostListener('click') open() {\r\n    this.menu.open();\r\n    document.addEventListener(\"click\", this.close, true);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    document.removeEventListener(\"click\", this.close);\r\n  }\r\n\r\n}\r\n\r\nexport const MENU_DIRECTIVES = [Md2MenuNotClosable, Md2Menu, Md2MenuOpen];"],"sourceRoot":"/source/"}