{"version":3,"sources":["tooltip/tooltip.ts"],"names":[],"mappings":"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","file":"tooltip.js","sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  HostListener,\n  Input,\n  ViewContainerRef,\n  ViewEncapsulation,\n  NgModule,\n  ModuleWithProviders\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  Overlay,\n  OverlayState,\n  OverlayRef,\n  ComponentPortal,\n  OVERLAY_PROVIDERS\n} from '../core';\n\nexport type TooltipPosition = 'before' | 'after' | 'above' | 'below';\n\n@Directive({\n  selector: '[tooltip]'\n})\nexport class Md2Tooltip {\n  private visible: boolean = false;\n  private timer: any;\n\n  _overlayRef: OverlayRef;\n  _tooltipInstance: Md2TooltipComponent;\n\n  @Input('tooltip') message: string;\n  @Input('tooltip-position') position: TooltipPosition = 'below';\n  @Input('tooltip-delay') delay: number = 0;\n\n  constructor(private _viewContainer: ViewContainerRef, private _overlay: Overlay) { }\n\n  /**\n   * show tooltip while mouse enter or focus of element\n   * @param event\n   */\n  @HostListener('focusin', ['$event'])\n  @HostListener('mouseenter', ['$event'])\n  show(event: Event): void {\n    if (this.visible) {\n      return;\n    }\n    this.visible = true;\n\n    clearTimeout(this.timer);\n    this.timer = setTimeout(() => {\n      this.timer = 0;\n\n      let strategy = this._overlay.position().global().fixed().top('0').left('0');\n      let config = new OverlayState();\n      config.positionStrategy = strategy;\n\n      this._overlayRef = this._overlay.create(config);\n      let portal = new ComponentPortal(Md2TooltipComponent);\n      this._tooltipInstance = this._overlayRef.attach(portal).instance;\n\n      this._tooltipInstance.message = this.message;\n      this._tooltipInstance.position = this.position;\n      this._tooltipInstance.hostEl = this._viewContainer.element;\n    }, this.delay);\n  }\n\n  /**\n   * hide tooltip while mouse our/leave or blur of element\n   * @param event\n   */\n  @HostListener('focusout', ['$event'])\n  @HostListener('mouseleave', ['$event'])\n  hide(event: Event): void {\n    clearTimeout(this.timer);\n    if (!this.visible) {\n      return;\n    }\n    this.visible = false;\n    if (this._tooltipInstance) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n      this._tooltipInstance = null;\n    }\n  }\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'md2-tooltip',\n  template: `\n    <div class=\"md2-tooltip-container\" [ngStyle]=\"{top: _top, left: _left}\">\n      <div class=\"md2-tooltip {{position}}\" [class.visible]=\"_isVisible\">{{message}}</div>\n    </div>\n  `,\n  styleUrls: ['tooltip.css'],\n  host: {\n    'role': 'tooltip',\n  },\n  encapsulation: ViewEncapsulation.None\n})\nexport class Md2TooltipComponent implements AfterViewInit {\n  _isVisible: boolean;\n  _top: string = '-1000px';\n  _left: string = '-1000px';\n  message: string;\n  position: string;\n  hostEl: ElementRef;\n\n  constructor(private _element: ElementRef, private _changeDetector: ChangeDetectorRef) {\n    this._isVisible = false;\n  }\n\n  ngAfterViewInit() {\n    let _position = this.positionElements(this.hostEl.nativeElement, this._element.nativeElement.children[0], this.position);\n    this._top = _position.top + 'px';\n    this._left = _position.left + 'px';\n    this._isVisible = true;\n    this._changeDetector.detectChanges();\n  }\n\n  /**\n   * calculate position of target element\n   * @param hostEl host element\n   * @param targetEl targer element\n   * @param position position\n   * @return {top: number, left: number} object of top, left properties\n   */\n  private positionElements(hostEl: HTMLElement, targetEl: HTMLElement, position: string): { top: number, left: number } {\n    let positionStrParts = position.split('-');\n    let pos0 = positionStrParts[0];\n    let pos1 = positionStrParts[1] || 'center';\n    let hostElPos = this.offset(hostEl);\n    let targetElWidth = targetEl.offsetWidth;\n    let targetElHeight = targetEl.offsetHeight;\n    let shiftWidth: any = {\n      center: hostElPos.left + hostElPos.width / 2 - targetElWidth / 2,\n      before: hostElPos.left,\n      after: hostElPos.left + hostElPos.width\n    };\n\n    let shiftHeight: any = {\n      center: hostElPos.top + hostElPos.height / 2 - targetElHeight / 2,\n      above: hostElPos.top,\n      below: hostElPos.top + hostElPos.height\n    };\n\n    let targetElPos: { top: number, left: number };\n    switch (pos0) {\n      case 'before':\n        targetElPos = {\n          top: shiftHeight[pos1],\n          left: (hostElPos.left - targetElWidth)// > 0 ? (hostElPos.left - targetElWidth) : (hostElPos.width + hostElPos.left)\n        };\n        break;\n      case 'after':\n        targetElPos = {\n          top: shiftHeight[pos1],\n          left: shiftWidth[pos0]\n        };\n        break;\n      case 'above':\n        targetElPos = {\n          top: hostElPos.top - targetElHeight,\n          left: shiftWidth[pos1]\n        };\n        break;\n      default:\n        targetElPos = {\n          top: shiftHeight[pos0],\n          left: shiftWidth[pos1]\n        };\n        break;\n    }\n    return targetElPos;\n  }\n\n  /**\n   * calculate offset of target element\n   * @param nativeEl element\n   * @return {width: number, height: number,top: number, left: number} object of with, height, top, left properties\n   */\n  private offset(nativeEl: any): { width: number, height: number, top: number, left: number } {\n    let boundingClientRect = nativeEl.getBoundingClientRect();\n    return {\n      width: boundingClientRect.width || nativeEl.offsetWidth,\n      height: boundingClientRect.height || nativeEl.offsetHeight,\n      top: boundingClientRect.top,\n      left: boundingClientRect.left\n    };\n  }\n\n  private get window(): Window { return window; }\n\n  private get document(): Document { return window.document; }\n\n}\n\nexport const MD2_TOOLTIP_DIRECTIVES: any[] = [Md2Tooltip, Md2TooltipComponent];\n\n@NgModule({\n  imports: [CommonModule],\n  exports: MD2_TOOLTIP_DIRECTIVES,\n  declarations: MD2_TOOLTIP_DIRECTIVES,\n  entryComponents: [Md2TooltipComponent]\n})\nexport class Md2TooltipModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: Md2TooltipModule,\n      providers: [OVERLAY_PROVIDERS]\n    };\n  }\n}\n"]}